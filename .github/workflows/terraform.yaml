name: Terraform 

on: 
  workflow_dispatch:
    inputs:
      terraform-action:
        description: "Choose terraform action"
        required: true
        default: 'plan'
        type: choice
        options:
          - 'plan'
          - 'apply'
          - 'destroy'

permissions:
  contents: read

jobs:
  terraform-action:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    
    defaults: 
      run: 
        shell: bash
        working-directory: ./modular_infrastructure  
    
    steps:
    - name: checkout current git repository
      uses: actions/checkout@v3

    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:   
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ap-southeast-2
      
    - name: configure terraform on GitHub Actions runner
      uses: hashicorp/setup-terraform@v2

    - name: extract GitHub repository branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    
    - name: configure S3 bucket key for remote backend
      env:
        BRANCH: ${{ steps.extract_branch.outputs.branch }}
      run: sed -i "s/<BRANCH_NAME>/$BRANCH/g" meta.tf
    
    - name: terraform init
      run: terraform init
    
    - name: terraform format
      run: terraform fmt -check -diff

    - name: retrieve selected GitHub Actions workflow input
      id: select_action
      run: echo "action=${{ github.event.inputs.terraform-action }}" >> $GITHUB_ENV

    - name: terraform plan
      run: terraform plan 
    
    - name: terraform ${{ env.action}}
      if: ${{ contains('apply destroy', env.action) }}
      run: |
        terraform ${{ env.action }} -auto-approve
